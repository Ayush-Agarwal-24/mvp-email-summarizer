const state = { filter: "all", emails: [], byId: {}, acts: {}, me: { connected: false }, gfilter: 'unread', gcat: '', domain: '', search: '', sort: 'priority' };
const list = document.getElementById("list");
const refresh = document.getElementById("refresh");
const markAll = document.getElementById("markAll");
const sumAll = document.getElementById("sumAll");
const extAll = document.getElementById("extAll");
const connect = document.getElementById("connect");
const userEl = document.getElementById("user");
const statusEl = document.getElementById("status");
const modal = document.getElementById('modal');
const modalContent = document.getElementById('modal-content');
const modalClose = document.getElementById('modal-close');
const modalImport = document.getElementById('modal-import');
const modalCopy = document.getElementById('modal-copy');
const searchEl = document.getElementById('search');
const domainEl = document.getElementById('domain');
const sortEl = document.getElementById('sort');
let modalEmailId = null;
function ftime(s){try{return new Date(s).toLocaleString()}catch(e){return""}}
function esc(s){return String(s||"").replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}
function domainOf(sender){if(!sender)return'';const m=String(sender).match(/@([^>\s]+)/);return m?m[1].toLowerCase():''}
function priorityScore(e){let s=0;const t=((e.subject||'')+' '+(e.snippet||'')).toLowerCase();if(t.includes('urgent')||t.includes('asap'))s+=5;if(t.includes('eod')||t.includes('by ')||t.includes('deadline'))s+=3;if(t.includes('invite')||t.includes('meeting'))s+=2;if(t.includes('invoice')||t.includes('payment'))s+=2;const dt=e.received_at?new Date(e.received_at).getTime():0;if(dt)s+=Math.max(0,3-((Date.now()-dt)/(1000*60*60*24)));return s}
function passFilter(e){if(state.search){const q=state.search.toLowerCase();const hay=((e.subject||'')+' '+(e.sender||'')+' '+(e.snippet||'')).toLowerCase();if(!hay.includes(q))return false}if(state.domain){if(domainOf(e.sender)!==state.domain)return false}if(state.filter==='all')return true;const a=state.acts[e.id];if(!a)return false;if(state.filter==='tasks')return(a.tasks||[]).length>0;if(state.filter==='meetings')return(a.meetings||[]).length>0;if(state.filter==='deadlines')return(a.deadlines||[]).length>0;return true}
function card(e){const sid='s-'+e.id;const chips='<div class="chips" id="'+sid+'"></div>';const link='<a class="btn" href="'+(e.gmail_url||'#')+'" target="_blank">Open</a>';const details='<button class="btn" data-act="details" data-id="'+e.id+'">Details</button>';const readb='<button class="btn" data-act="read" data-id="'+e.id+'">Mark Read</button>';const summ='<button class="btn" data-act="summ" data-id="'+e.id+'">Summarize</button>';const extr='<button class="btn" data-act="extract" data-id="'+e.id+'">Extract</button>';return '<div class="card"><div class="row"><div><div class="subject">'+(e.subject||'(no subject)')+'</div><div class="meta">'+(e.sender||'')+' • '+(ftime(e.received_at)||'')+'</div></div><div style="display:flex;gap:8px">'+details+link+'</div></div><div class="summary" id="sum-'+e.id+'"></div>'+chips+'<div class="actions">'+summ+extr+readb+'<button class="btn" data-act="snooze" data-id="'+e.id+'">Snooze 1d</button></div></div>'}
function render(){let arr=state.emails.filter(passFilter);if(state.sort==='priority'){arr=arr.slice().sort(function(a,b){return priorityScore(b)-priorityScore(a)})}else{arr=arr.slice().sort(function(a,b){const ad=a.received_at?new Date(a.received_at).getTime():0;const bd=b.received_at?new Date(b.received_at).getTime():0;return bd-ad})}const rows=arr.map(card).join("");list.innerHTML=rows;arr.forEach(function(e){const sEl=document.getElementById('sum-'+e.id);if(sEl)sEl.textContent='Loading...';const cEl=document.getElementById('s-'+e.id);if(cEl)cEl.innerHTML='';loadSummary(e.id)})}
function setMe(){if(state.me.connected){if(connect)connect.style.display='none';if(userEl)userEl.textContent=state.me.email?('Connected as '+state.me.email):'Connected'}else{if(connect)connect.style.display='inline-block';if(userEl)userEl.textContent=''}}
function setStatus(text,isError){if(!statusEl)return;statusEl.textContent=text||'';statusEl.className=isError?'status error':'status'}
async function req(url,opt){const r=await fetch(url,opt);if(!r.ok)return null;return r.json()}
async function loadMe(){const me=await req('/api/me');state.me=me||{connected:false};setMe();if(!state.me.connected)setStatus('Connect Gmail to start')}
function refreshDomains(){if(!domainEl)return;const set=new Set();set.add('');state.emails.forEach(function(e){const d=domainOf(e.sender);if(d)set.add(d)});const opts=Array.from(set).sort().map(function(d){const label=d||'All domains';return '<option value="'+d+'">'+label+'</option>'}).join('');domainEl.innerHTML=opts;if(state.domain)domainEl.value=state.domain}
async function loadEmails(){if(!state.me.connected){list.innerHTML='';return}setStatus('Loading emails...');if(refresh)refresh.disabled=true;const qs=new URLSearchParams({limit:'50',filter:state.gfilter});if(state.gcat)qs.append('category',state.gcat);const data=await req('/api/emails?'+qs.toString());if(refresh)refresh.disabled=false;if(!data){setStatus('Failed to load emails',true);return}state.emails=Array.isArray(data)?data:[];state.byId={};state.emails.forEach(function(e){state.byId[e.id]=e});if(state.emails.length===0){setStatus('No emails to show')}else{setStatus('')}refreshDomains();render()}
function gcalLink(title,when){const base='https://calendar.google.com/calendar/u/0/r/eventedit';const p=new URLSearchParams();if(title)p.append('text',title);let det='Created from Email Summarizer';if(when)det+=' • '+when;p.append('details',det);return base+'?'+p.toString()}
async function loadSummary(id){const res=await req('/api/summary',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_id:id})});const sEl=document.getElementById('sum-'+id);if(!res){if(sEl)sEl.textContent='Failed to summarize';return}if(sEl)sEl.innerHTML=esc(res.summary_text||"").replace(/\n/g,'<br>')}
async function extractFor(id){const res=await req('/api/actions/extract',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_id:id})});if(!res)return;let acts={tasks:[],meetings:[],deadlines:[]};try{acts=JSON.parse(res.actions_json||"{}")}catch(e){}state.acts[id]=acts;const chipsEl=document.getElementById('s-'+id);if(!chipsEl)return;const all=[];(acts.tasks||[]).forEach(function(a){all.push('task: '+(a.title||""))});(acts.meetings||[]).forEach(function(a){const w=a.when_text?' • '+a.when_text:'';const link=gcalLink(a.title,a.when_text);all.push('meeting: '+(a.title||"")+w+' <a class="btn" style="padding:2px 6px;margin-left:6px" target="_blank" href="'+link+'">Add</a>')});(acts.deadlines||[]).forEach(function(a){const w=a.when_text?' • '+a.when_text:'';all.push('deadline: '+(a.title||"")+w)});if(acts.meta&&acts.meta.category){all.unshift('category: '+acts.meta.category)}chipsEl.innerHTML=all.map(function(x){return '<span class="chip">'+x+'</span>'}).join("")}
function renderChipsBlock(acts){const rows=[];(acts.tasks||[]).forEach(function(a){rows.push('<div><span class="chip">task</span> '+(a.title||'')+'</div>')});(acts.meetings||[]).forEach(function(a){rows.push('<div><span class="chip">meeting</span> '+(a.title||'')+(a.when_text?' • '+a.when_text:'')+' <a class="btn" style="padding:2px 6px;margin-left:6px" target="_blank" href="'+gcalLink(a.title,a.when_text)+'">Add</a></div>')});(acts.deadlines||[]).forEach(function(a){rows.push('<div><span class="chip">deadline</span> '+(a.title||'')+(a.when_text?' • '+a.when_text:'')+'</div>')});if(acts.meta&&acts.meta.category){rows.unshift('<div><span class="chip">category</span> '+acts.meta.category+'</div>')}return rows.join('')}
list.addEventListener('click',async function(ev){const b=ev.target.closest('button.btn');if(!b)return;const act=b.getAttribute('data-act');const id=parseInt(b.getAttribute('data-id'),10);if(act==='read'){const r=await req('/api/gmail/mark_read',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_id:id})});if(r&&r.ok){state.emails=state.emails.filter(function(x){return x.id!==id});render();return}else{setStatus('Mark read failed (modify scope required)',true)}}if(act==='snooze'){const until=new Date(Date.now()+86400000).toISOString();const r=await req('/api/items',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_id:id,type:'task',title:'Snoozed'})});if(r&&r.id){await req('/api/items/'+r.id,{method:'PATCH',headers:{'Content-Type':'application/json'},body:JSON.stringify({status:'snoozed',snooze_until:until})})}}if(act==='summ'){await loadSummary(id)}if(act==='extract'){await extractFor(id)}if(act==='details'){openDetails(id)}})
function openDetails(id){modalEmailId=id;if(!modal||!modalContent)return;const e=state.byId[id];let acts=state.acts[id]||{tasks:[],meetings:[],deadlines:[]};const sumEl=document.getElementById('sum-'+id);const summaryText=sumEl?sumEl.textContent:'';const html='<div><div class="subject">'+esc(e.subject||'(no subject)')+'</div><div class="meta">'+esc(e.sender||'')+' • '+(ftime(e.received_at)||'')+'</div><div class="summary" style="margin-top:8px;white-space:pre-wrap">'+esc(summaryText||'').replace(/\n/g,'<br>')+'</div><div style="margin-top:10px">'+renderChipsBlock(acts)+'</div></div>';modalContent.innerHTML=html;modal.classList.remove('hidden')}
if(modalClose)modalClose.addEventListener('click',function(){modal.classList.add('hidden');modalEmailId=null})
if(modalImport)modalImport.addEventListener('click',async function(){if(!modalEmailId)return;modalImport.disabled=true;const r=await req('/api/actions/import',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email_id:modalEmailId})});modalImport.disabled=false;if(r&&typeof r.created==='number'){setStatus('Imported '+r.created+' actions')}else{setStatus('Failed to import actions',true)}})
if(modalCopy)modalCopy.addEventListener('click',function(){const el=document.getElementById('sum-'+modalEmailId);const t=el?el.textContent:'';if(navigator.clipboard)navigator.clipboard.writeText(t)})
document.querySelectorAll('.tab').forEach(function(btn){btn.addEventListener('click',function(){document.querySelectorAll('.tab').forEach(function(x){x.classList.remove('active')});btn.classList.add('active');state.filter=btn.getAttribute('data-filter')||'all';render()})})
refresh.addEventListener('click',function(){loadEmails()})
if(markAll)markAll.addEventListener('click',async function(){const ids=state.emails.map(function(e){return e.id});if(ids.length===0)return;setStatus('Marking all as read...');const r=await req('/api/gmail/mark_read_batch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ids})});if(r&&typeof r.updated==='number'){setStatus('Marked '+r.updated+' as read');loadEmails()}else{setStatus('Mark all read failed',true)}})
if(sumAll)sumAll.addEventListener('click',async function(){const ids=state.emails.map(function(e){return e.id});if(ids.length===0)return;setStatus('Summarizing...');const r=await req('/api/summary/batch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ids})});if(r&&typeof r.processed==='number'){setStatus('Summarized '+r.processed+' emails');state.emails.forEach(function(e){loadSummary(e.id)})}else{setStatus('Summarize all failed',true)}})
if(extAll)extAll.addEventListener('click',async function(){const ids=state.emails.map(function(e){return e.id});if(ids.length===0)return;setStatus('Extracting...');const r=await req('/api/actions/batch',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({ids})});if(r&&typeof r.processed==='number'){setStatus('Extracted '+r.processed+' emails');state.emails.forEach(function(e){extractFor(e.id)})}else{setStatus('Extract all failed',true)}})
document.querySelectorAll('.gtab').forEach(function(btn){btn.addEventListener('click',function(){document.querySelectorAll('.gtab').forEach(function(x){x.classList.remove('active')});btn.classList.add('active');state.gfilter=btn.getAttribute('data-gfilter')||'unread';loadEmails()})})
document.querySelectorAll('.ctab').forEach(function(btn){btn.addEventListener('click',function(){document.querySelectorAll('.ctab').forEach(function(x){x.classList.remove('active')});btn.classList.add('active');state.gcat=btn.getAttribute('data-gcat')||'';loadEmails()})})
if(searchEl)searchEl.addEventListener('input',function(){state.search=searchEl.value||'';render()})
if(domainEl)domainEl.addEventListener('change',function(){state.domain=domainEl.value||'';render()})
if(sortEl)sortEl.addEventListener('change',function(){state.sort=sortEl.value||'priority';render()})
loadMe().then(loadEmails)
